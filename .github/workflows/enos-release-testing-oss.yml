name: enos-release-testing-oss

on:
  repository_dispatch:
    types:
      - enos-release-testing-oss
      - enos-release-testing-oss::*

jobs:
  set-product-version:
    if: ${{ startsWith(github.event.client_payload.payload.branch, 'release/') }}
    runs-on: ubuntu-latest
    outputs:
      vault-version: ${{ steps.set-product-version.outputs.product-version }}
      vault-base-version: ${{ steps.set-product-version.outputs.base-product-version }}
      vault-prerelease-version: ${{ steps.set-product-version.outputs.prerelease-product-version }}
      vault-minor-version: ${{ steps.set-product-version.outputs.minor-product-version }}
    steps:
      - uses: actions/checkout@v3
      - name: Set Product version
        id: set-product-version
        uses: hashicorp/actions-set-product-version@v1

  save-crt-metadata:
    runs-on: ubuntu-latest
    steps:
      - name: Persist metadata
        uses: hashicorp/actions-persist-metadata@v1

  product-metadata:
    if: ${{ startsWith(github.event.client_payload.payload.branch, 'release/') }}
    runs-on: ubuntu-latest
    needs: set-product-version
    outputs:
      matrix-test-group: ${{ steps.get-metadata.outputs.matrix-test-group }}
      vault-revision: ${{ steps.get-metadata.outputs.vault-revision }}
    steps:
      - uses: actions/checkout@v3
        with:
          # Check out the repository at the same Git SHA that was used to create
          # the artifacts to get the correct metadata.
          ref: ${{ github.event.client_payload.payload.sha }}
      - id: get-metadata
        env:
          # MATRIX_MAX_TEST_GROUPS is required to determine the randomly selected
          # test group. It should be set to the highest test_group used in the
          # enos-run-matrices.
          MATRIX_MAX_TEST_GROUPS: 2
        run: |
          echo "matrix-test-group=$(make ci-get-matrix-group-id)" >> $GITHUB_OUTPUT
          echo "vault-revision=$(make ci-get-revision)" >> $GITHUB_OUTPUT

  test:
    name: Test ${{ matrix.build-artifact-name }}
    if: ${{ startsWith(github.event.client_payload.payload.branch, 'release/') }}
    needs: [product-metadata, set-product-version]
    uses: ./.github/workflows/enos-run.yml
    strategy:
      fail-fast: false
      matrix:
        include:
          - matrix-file-name: enos_release_testing_oss-artifactory-oss-linux-amd64-zip
            build-artifact-name: vault_${{ needs.set-product-version.outputs.vault-version }}_linux_amd64.zip
          - matrix-file-name: enos_release_testing_oss-artifactory-oss-linux-arm64-zip
            build-artifact-name: vault_${{ needs.set-product-version.outputs.vault-version }}_linux_arm64.zip
    with:
      build-artifact-name: ${{ matrix.build-artifact-name }}
      matrix-file-name: ${{ matrix.matrix-file-name }}
      matrix-test-group: ${{ needs.product-metadata.outputs.matrix-test-group }}
      vault-edition: oss
      vault-revision: ${{ needs.product-metadata.outputs.vault-revision }}
    secrets: inherit
